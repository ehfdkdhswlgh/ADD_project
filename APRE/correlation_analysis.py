import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from prefixspan import PrefixSpan



#wireshark에서 copy as a stream 시 가져올 수 있음
#무작위 183길이의 beacon frame 20개 저장
#나중에는 유사 패킷들을 모으는걸 계층적 군집화로 자동화 구현해야할듯

packets = [
    '00001800ee58000010028509a000e39c5200004708267e0580000000ffffffffffff0016b6f71d510016b6f71d5160b282e138962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f0008267e05',
    '00001800ee58000010028509a000e29c64000046478fd61380000000ffffffffffff0016b6f71d510016b6f71d51a0b2c0233f962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f00478fd613',
    '00001800ee58000010028509a000e39c520000476356715980000000ffffffffffff0016b6f71d510016b6f71d51d0b282d143962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f0063567159',
    '00001800ee58000010028509a000e29c5e000046dfb380a280000000ffffffffffff0016b6f71d510016b6f71d51e0b2826145962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f00dfb380a2',
    '00001800ee58000010028509a000e29c6400004609046d2180000000ffffffffffff0016b6f71d510016b6f71d51f0b282f146962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f0009046d21',
    '00001800ee58000010028509a000e49c640000484f8fb38f80000000ffffffffffff0016b6f71d510016b6f71d51a0b3829156962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f004f8fb38f',
    '00001800ee58000010028509a000e39c58000047f95c0bb380000000ffffffffffff0016b6f71d510016b6f71d51c0b382b159962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f00f95c0bb3',
    '00001800ee58000010028509a000e39c5e000047fbb9b64880000000ffffffffffff0016b6f71d510016b6f71d5170b482c167962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f00fbb9b648',
    '00001800ee58000010028509a000e39c5e0000473922fefa80000000ffffffffffff0016b6f71d510016b6f71d51f0b4824174962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f003922fefa',
    '00001800ee58000010028509a000e19c6400004507a3c7e880000000ffffffffffff0016b6f71d510016b6f71d5110b5826177962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f0007a3c7e8',
    '00001800ee58000010028509a000e29c580000467958dc9e80000000ffffffffffff0016b6f71d510016b6f71d5160b6828193962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f007958dc9e',
    '00001800ee58000010028509a000e29c5e0000469fe92bc780000000ffffffffffff0016b6f71d510016b6f71d5180b682a196962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f009fe92bc7',
    '00001800ee58000010028509a000e29c640000465699ad7c80000000ffffffffffff0016b6f71d510016b6f71d51d0b682519b962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f005699ad7c',
    '00001800ee58000010028509a000e29c640000467e0cc3ae80000000ffffffffffff0016b6f71d510016b6f71d5150b78241a6962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f007e0cc3ae',
    '00001800ee58000010028509a000e49c58000048db36f3a280000000ffffffffffff0016b6f71d510016b6f71d51c0b88281c5962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f00db36f3a2',
    '00001800ee58000010028509a000e49c64000048d810e53e80000000ffffffffffff0016b6f71d510016b6f71d51a0b98241d8962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f00d810e53e',
    '00001800ee58000010028509a000e39c520000470072e0f580000000ffffffffffff0016b6f71d510016b6f71d5120ba82a1e1962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f000072e0f5',
    '00001800ee58000010028509a000e49c64000048adb3180f80000000ffffffffffff0016b6f71d510016b6f71d51a0ba8221ee962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f00adb3180f',
    '00001800ee58000010028509a000e39c64000047e345660a80000000ffffffffffff0016b6f71d510016b6f71d5160bb8251ff962800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f00e345660a',
    '00001800ee58000010028509a000e49c5200004831076bfa80000000ffffffffffff0016b6f71d510016b6f71d5120bc828110972800000064000106000c3330204d756e726f65205374010482848b960301060504000100000706555349010b1a0c120f0003a4000027a4000042435e0062322f002a010032088c129824b048606cdd15000af50a0240c000030103050e04ff000300110101dd180050f20201010f0003a4000027a4000042435e0062322f0031076bfa'
]


# #2자리씩 끊어서 저장
hex_lists = []
for i in range(len(packets)):
    hex_list = [packets[i][j:j+2] for j in range(0, len(packets[i]), 2)]
    hex_lists.append(hex_list)




#int형 리스트로 변환
int_lists = []
for i in range(len(hex_lists)):
    int_list = []
    for j in range(len(hex_lists[i])):
        int_list.append(int(hex_lists[i][j], 16))
    int_lists.append(int_list)



#column 생성 (모든 패킷 길이가 같다고 가정)
column = []
for i in range(len(int_lists[0])):
    column.append(str(i))



#dataframe 생성
df = pd.DataFrame(int_lists, columns=column)
df_corr = df.corr()
print(df_corr)
sns.heatmap(df_corr)

#..



